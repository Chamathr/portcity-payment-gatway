<% include ./partials/header %>

    <script>
        window.onload = function (event) {
            Checkout.showPaymentPage()
        };
    </script>

    <!-- <div class="col-12">
        <div class="row">
            <div class="contents col-12">
                <div class="col-md-12">
                    <div class="container">
                        <div class="row">
                          <div class="col text-center">
                            <input id="page-with-session" type="button" class="btn btn-primary"
                                    value="Proceed the payment" onclick="Checkout.showPaymentPage();" />
                          </div>
                        </div>
                      </div>
                </div>
            </div>
        </div>
    </div> -->

    <script src="<%= baseUrl %>/checkout/version/<%= apiVersion %>/checkout.js" data-error="errorCallback"
        data-cancel="cancelCallback" data-beforeRedirect="beforeRedirect" data-afterRedirect="afterRedirect"
        data-complete="completeCallback">
        </script>
    <script inline="javascript">
        /*<![CDATA[*/
        var merchantId = '<%= merchant %>';
        var sessionId = '<%= session.id%>';
        var sessionVersion = '<%= session.version%>';
        var successIndicator = '<%= successIndicator%>';
        var orderId = '<%= orderId%>';
        /*]]>*/
        var resultIndicator = null;
        // This method preserves the current state of successIndicator and orderId, so they're not overwritten when we return to this page after redirect
        function beforeRedirect() {
            return {
                successIndicator: successIndicator,
                orderId: orderId
            };
        }
        // This method is specifically for the full payment page option. Because we leave this page and return to it, we need to preserve the
        // state of successIndicator and orderId using the beforeRedirect/afterRedirect option
        function afterRedirect(data) {
            // Compare with the resultIndicator saved in the completeCallback() method
            if (resultIndicator) {
                var result = (resultIndicator === data.successIndicator) ? "SUCCESS" : "ERROR";
                window.location.href = "/process/pay/" + data.orderId + "/" + result;
            }
            else {
                successIndicator = data.successIndicator;
                orderId = data.orderId;
                sessionId = data.sessionId;
                sessionVersion = data.sessionVersion;
                merchantId = data.merchantId;

                window.location.href = "/process/pay/" + data.orderId + "/" + data.successIndicator + "/" + data.sessionId;
            }
        }

        function errorCallback(error) {
            var message = JSON.stringify(error);
            $("#loading-bar-spinner").hide();
            var $errorAlert = $('#error-alert');
            console.log(message);
            $errorAlert.append("<p>" + message + "</p>");
            $errorAlert.show();
        }
        
        cancelCallback = "https://google.com"
        // function cancelCallback() {
        //     console.log('Payment cancelled');
        //     // Reload the page to generate a new session ID - the old one is out of date as soon as the lightbox is invoked
        //     window.location.reload(true);
        // }

        // This handles the response from Hosted Checkout and redirects to the appropriate endpoint
        function completeCallback(response) {
            // Save the resultIndicator
            resultIndicator = response;
            var result = (resultIndicator === successIndicator) ? "SUCCESS" : "ERROR";
            window.location.href = "/process/pay/" + orderId + "/" + result;
        }
        /*function randomId() {
            var chars = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ", length = 10;
            var result = '';
            for (var i = length; i > 0; --i) result += chars[Math.round(Math.random() * (chars.length - 1))];
            return result;
        }*/
        Checkout.configure({
            merchant: merchantId,
            order: {
                amount: function () {
                    //Dynamic calculation of amount
                    return 20;
                },
                currency: 'LKR',
                description: 'Ordered goods'
                //id: randomId()
            },
            session: {
                id: sessionId,
                version: sessionVersion
            },
            interaction: {
                merchant: {
                    name: 'Merchant Name',
                    address: {
                        line1: '200 Sample St',
                        line2: '1234 Example Town'
                    }
                }
            }
        });
    </script>

    </body>
    </div>
    </div>
    </body>